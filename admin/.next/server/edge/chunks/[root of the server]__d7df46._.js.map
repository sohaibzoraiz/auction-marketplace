{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["import { withAuth, NextRequestWithAuth } from \"next-auth/middleware\";\nimport { NextResponse } from \"next/server\";\n\nexport default withAuth(\n  function middleware(req: NextRequestWithAuth) {\n    const pathname = req.nextUrl?.pathname;\n    const isAdmin = req.nextauth.token?.role === \"ADMIN\";\n    const isUser = req.nextauth.token?.role === \"USER\";\n\n    if (pathname.includes(\"/admin\") && !isAdmin) {\n      return NextResponse.redirect(new URL(\"/user\", req.url));\n    }\n\n    if (pathname.includes(\"/user\") && !isUser) {\n      return NextResponse.redirect(new URL(\"/admin\", req.url));\n    }\n\n    // if logged in redirect to admin\n    return NextResponse.next();\n  },\n  {\n    secret: process.env.SECRET,\n    callbacks: {\n      authorized: (params) => {\n        const { token } = params;\n        return !!token;\n      },\n    },\n  },\n);\n\nexport const config = {\n  matcher: [\"/user/:path*\", \"/admin/:path*\"],\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;uCAEe,CAAA,GAAA,0IAAA,CAAA,WAAQ,AAAD,EACpB,SAAS,WAAW,GAAwB;IAC1C,MAAM,WAAW,IAAI,OAAO,EAAE;IAC9B,MAAM,UAAU,IAAI,QAAQ,CAAC,KAAK,EAAE,SAAS;IAC7C,MAAM,SAAS,IAAI,QAAQ,CAAC,KAAK,EAAE,SAAS;IAE5C,IAAI,SAAS,QAAQ,CAAC,aAAa,CAAC,SAAS;QAC3C,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,SAAS,IAAI,GAAG;IACvD;IAEA,IAAI,SAAS,QAAQ,CAAC,YAAY,CAAC,QAAQ;QACzC,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;IACxD;IAEA,iCAAiC;IACjC,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B,GACA;IACE,QAAQ,QAAQ,GAAG,CAAC,MAAM;IAC1B,WAAW;QACT,YAAY,CAAC;YACX,MAAM,EAAE,KAAK,EAAE,GAAG;YAClB,OAAO,CAAC,CAAC;QACX;IACF;AACF;AAGK,MAAM,SAAS;IACpB,SAAS;QAAC;QAAgB;KAAgB;AAC5C"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}